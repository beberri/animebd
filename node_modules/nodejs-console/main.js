module.exports = (function (con, fs, util, path) {
    var timer = {
        beginTime: +new Date(),
        lastTime: +new Date()
    };

    var _pub_static = function () {
        var _pri = {};
        var _pub = {};

        var _init = function (ns) {
            // unknown what doing
            require("callsite");

            if (typeof ns === 'string') {
                _pri.ns = ns;
            } else {
                _pri.ns = __stack[2].getFileName();
                _pri.ns = path.basename(_pri.ns);
            }
        };

        _pri['ns'] = 'default.ns';

        _pri['debug'] = true;

        _pri['getLineNumber'] = function () {
            return __stack[2].getLineNumber();
        };

        _pub['disable'] = function () {
            _pri.debug = false;
        };

        _pub['enable'] = function () {
            _pri.debug = true;
        };

        _pub['log'] = function () {
            if (_pri.debug !== true) {
                return;
            }

            var args = [].slice.apply(arguments);
            var nu = _pri.getLineNumber();
            var tag = util.format('[%s:%d]', _pri.ns, nu);
            args.unshift(tag);

            // green color
            args.forEach(function (v, i) {
                args[i] = '\x1B[32m' + v + '\x1B[39m';
            });

            // time
            var tmpTime = +new Date();
            var tmpV1 = tmpTime - timer.beginTime;
            var tmpV2 = tmpTime - timer.lastTime;
            timer.lastTime = tmpTime;

            if (tmpV2 > 100) {
                args.push(util.format('\x1B[36m[%sms]\x1B[39m\x1B[31m[%dms]\x1B[39m', tmpV1, tmpV2));
            } else {
                args.push(util.format('\x1B[36m[%sms][%dms]\x1B[39m', tmpV1, tmpV2));
            }

            con.log.apply(con, args);
        };

        _pub['warn'] = function () {
            if (_pri.debug !== true) {
                return;
            }

            var args = [].slice.apply(arguments);
            var nu = _pri.getLineNumber();
            var tag = util.format('[%s:%d]', _pri.ns, nu);
            args.unshift(tag);

            // yellow color
            args.forEach(function (v, i) {
                args[i] = '\x1B[33m' + v + '\x1B[39m';
            });

            con.warn.apply(con, args);
        };

        _pub['error'] = function () {
            if (_pri.debug !== true) {
                return;
            }

            var args = [].slice.apply(arguments);
            var nu = _pri.getLineNumber();
            var tag = util.format('[%s:%d]', _pri.ns, nu);
            args.unshift(tag);

            // red color
            args.forEach(function (v, i) {
                args[i] = '\x1B[31m' + v + '\x1B[39m';
            });

            con.error.apply(con, args);
        };

        if (this === 'test') {
            _pub._pri = _pri;
            _pub._init = _init;
        } else {
            _init.apply(_pub, arguments);
        }

        return _pub;
    };

    return _pub_static;
})(
    console,
    require('fs'),
    require('util'),
    require('path')
);
